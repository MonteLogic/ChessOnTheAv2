name: CI

on:
  push:
    branches: [ main, develop, MonteLogic/issue12 ]
  pull_request:
    branches: [ main, develop, MonteLogic/issue12 ]
  workflow_dispatch:

env:
  SOLUTION_NAME: ChessScrambler.sln
  TEST_PROJECT_PATH: ChessScrambler.Client/ChessScrambler.VisualTests/ChessScrambler.VisualTests.csproj
  CONFIGURATION: Release

jobs:
  build-and-test-windows:
    runs-on: windows-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.0.x'
        
    - name: Restore dependencies
      run: dotnet restore $env:SOLUTION_NAME
      
    - name: Build application
      run: dotnet build $env:SOLUTION_NAME --configuration $env:CONFIGURATION --no-restore
      
    - name: Run unit tests
      run: dotnet test ChessScrambler.Client/ChessScrambler.Tests/ChessScrambler.Tests.csproj --configuration $env:CONFIGURATION --no-build --logger "console;verbosity=normal"
      
    - name: Run visual tests
      run: dotnet test $env:TEST_PROJECT_PATH --configuration $env:CONFIGURATION --no-build --logger "console;verbosity=normal"
      
    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results-windows
        path: |
          TestResults/
          visual-test-screenshots/
        retention-days: 30

  build-and-test-linux:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.0.x'
        
    - name: Install Linux dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y xvfb libx11-6 libx11-xcb1 libxcb1 libxss1 libxrandr2 libasound2t64 libpangocairo-1.0-0 libatk1.0-0 libcairo-gobject2 libgtk-3-0 libgdk-pixbuf2.0-0
        
    - name: Restore dependencies
      run: dotnet restore $SOLUTION_NAME
      
    - name: Build application
      run: dotnet build $SOLUTION_NAME --configuration $CONFIGURATION --no-restore
      
    - name: Run unit tests
      run: dotnet test ChessScrambler.Client/ChessScrambler.Tests/ChessScrambler.Tests.csproj --configuration $CONFIGURATION --no-build --logger "console;verbosity=normal"
      
    - name: Run visual tests
      run: |
        export DISPLAY=:99
        Xvfb :99 -screen 0 1920x1080x24 &
        sleep 5
        dotnet test $TEST_PROJECT_PATH --configuration $CONFIGURATION --no-build --logger "console;verbosity=normal"
      
    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results-linux
        path: |
          TestResults/
          visual-test-screenshots/
        retention-days: 30

  build-and-test-macos:
    runs-on: macos-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.0.x'
        
    - name: Install macOS dependencies
      run: |
        brew install --cask xquartz
        
    - name: Restore dependencies
      run: dotnet restore $SOLUTION_NAME
      
    - name: Build application
      run: dotnet build $SOLUTION_NAME --configuration $CONFIGURATION --no-restore
      
    - name: Run unit tests
      run: dotnet test ChessScrambler.Client/ChessScrambler.Tests/ChessScrambler.Tests.csproj --configuration $CONFIGURATION --no-build --logger "console;verbosity=normal"
      
    - name: Run visual tests
      run: dotnet test $TEST_PROJECT_PATH --configuration $CONFIGURATION --no-build --logger "console;verbosity=normal"
      
    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results-macos
        path: |
          TestResults/
          visual-test-screenshots/
        retention-days: 30
